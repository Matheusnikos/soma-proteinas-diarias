import 'dart:io';

/*
1. Receber proteína animal, vegetal e cereal OK
2. Executar o fator de correção OK
3. Somar as três proteínas OK
4. Dividir pelo peso
*/

main() {
  print("\x1B[2J\x1B[0;0H");
  String nome = pegarNome();
  print("\x1B[2J\x1B[0;0H");

  num peso = pegarPeso();
  print("\x1B[2J\x1B[0;0H");

  num proteinaAnimal = pegarProteinaAnimal();
  print("\x1B[2J\x1B[0;0H");

  num proteinaLeguminosa = pegarProteinaLeguminosa();
  print("\x1B[2J\x1B[0;0H");

  num proteinaCereal = pegarProteinaCereal();
  print("\x1B[2J\x1B[0;0H");

  num somaProteinas = (proteinaAnimal + proteinaLeguminosa + proteinaCereal);
  num somaProteinasgk = (proteinaAnimal + proteinaLeguminosa + proteinaCereal) / peso;

  print('Nome: $nome');
  print('Peso: $peso' 'kg');

  print('Quantidade total de proteínas absorvidas: $somaProteinas' 'g');
  print('Quantidade total de proteínas absorvidas em g/kg $somaProteinasgk');
}

pegarNome() {
  print('Olá! Qual o seu nome?');
  String? nomeString = stdin.readLineSync();
  if (nomeString == null) {
    return 0.0;
  } else {
    return nomeString;
  }
}

pegarPeso() {
  print('Digite seu peso');
  String? pesoString = stdin.readLineSync();
  if (pesoString == null) {
    return 0.0;
  } else {
    return num.parse(pesoString);
  }
}

pegarProteinaAnimal() {
  print('Insira a quantidade de proteína animal');
  String? proteinaAnimalString = stdin.readLineSync();
  if (proteinaAnimalString == null) {
    return 0.0;
  } else {
    return num.parse(proteinaAnimalString) * 0.7;
  }
}

pegarProteinaLeguminosa() {
  print('Insira a quantidade de proteína Leguminosa');
  String? proteinaLeguminosaString = stdin.readLineSync();
  if (proteinaLeguminosaString == null) {
    return 0.0;
  } else {
    return num.parse(proteinaLeguminosaString) * 0.6;
  }
}

pegarProteinaCereal() {
  print('Insira a quantidade de proteína Cereal');
  String? proteinaCerealString = stdin.readLineSync();
  if (proteinaCerealString == null) {
    return 0.0;
  } else {
    return num.parse(proteinaCerealString) * 0.5;
  }
}
